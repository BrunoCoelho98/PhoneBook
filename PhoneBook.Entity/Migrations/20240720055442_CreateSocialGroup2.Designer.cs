// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhoneBook.Entity;

#nullable disable

namespace PhoneBook.Entity.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20240720055442_CreateSocialGroup2")]
    partial class CreateSocialGroup2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("PhoneBook.Entity.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SocialGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ContactId");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("SocialGroupId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("PhoneBook.Entity.Models.SocialGroup", b =>
                {
                    b.Property<int>("SocialGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SocialGroupId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SocialGroups");
                });

            modelBuilder.Entity("PhoneBook.Entity.Models.Contact", b =>
                {
                    b.HasOne("PhoneBook.Entity.Models.SocialGroup", "SocialGroup")
                        .WithMany("Contacts")
                        .HasForeignKey("SocialGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SocialGroup");
                });

            modelBuilder.Entity("PhoneBook.Entity.Models.SocialGroup", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
